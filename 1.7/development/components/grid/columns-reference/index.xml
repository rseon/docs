<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Column Types reference on PrestaShop Developer Documentation</title>
    <link>https://devdocs.prestashop.com/1.7/development/components/grid/columns-reference/</link>
    <description>Recent content in Column Types reference on PrestaShop Developer Documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 23 Aug 2018 15:07:44 +0300</lastBuildDate>
    
	<atom:link href="https://devdocs.prestashop.com/1.7/development/components/grid/columns-reference/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>ActionColumn reference</title>
      <link>https://devdocs.prestashop.com/1.7/development/components/grid/columns-reference/action/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/components/grid/columns-reference/action/</guid>
      <description> ActionColumn Type This type of column allows to add actions to your Grid rows.
Available options field actions: array|null default: null
Record field name which will be used as bulk action checkbox value.
Example usage use PrestaShop\PrestaShop\Core\Grid\Column\Type\Common\ActionColumn; use PrestaShop\PrestaShop\Core\Grid\Column\ColumnCollection; $productColumn = new ActionColumn(&#39;actions&#39;); $productColumn-&amp;gt;setName(&#39;Actions&#39;); $productColumn-&amp;gt;setOptions([ &#39;actions&#39; =&amp;gt; [ -&amp;gt;add((new LinkRowAction(&#39;delete&#39;)) -&amp;gt;setIcon(&#39;delete&#39;) -&amp;gt;setOptions([ &#39;route&#39; =&amp;gt; &#39;admin_custom_route&#39;, &#39;route_param_name&#39; =&amp;gt; &#39;mailId&#39;, &#39;route_param_field&#39; =&amp;gt; &#39;id_mail&#39;, &#39;confirm_message&#39; =&amp;gt; &#39;Delete selected item?&#39;, ]) ) ], ]); $columns = new ColumnCollection(); $columns-&amp;gt;add($productColumn);  </description>
    </item>
    
    <item>
      <title>BulkActionColumn reference</title>
      <link>https://devdocs.prestashop.com/1.7/development/components/grid/columns-reference/bulk-action/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/components/grid/columns-reference/bulk-action/</guid>
      <description> BulkActionColumn Type This type of column allows to add bulk action checkboxes to your Grid.
Available options field bulk_field: string required
Record field name which will be used as bulk action checkbox value.
Example usage use PrestaShop\PrestaShop\Core\Grid\Column\Type\Common\BulkActionColumn; use PrestaShop\PrestaShop\Core\Grid\Column\ColumnCollection; $productColumn = new BulkActionColumn(&#39;bulk_action&#39;); $productColumn-&amp;gt;setName(&#39;&#39;); // it is common set empty name for bulk action columns $productColumn-&amp;gt;setOptions([ &#39;bulk_field&#39; =&amp;gt; &#39;id_product&#39;, ]); $columns = new ColumnCollection(); $columns-&amp;gt;add($productColumn);  </description>
    </item>
    
    <item>
      <title>DataColumn reference</title>
      <link>https://devdocs.prestashop.com/1.7/development/components/grid/columns-reference/data/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/components/grid/columns-reference/data/</guid>
      <description> DataColumn Type The most basic column is DataColumn. It is used to display raw field data in Grid.
Available options field type: string required
Record field name which column displays.
Example usage use PrestaShop\PrestaShop\Core\Grid\Column\Type\DataColumn; use PrestaShop\PrestaShop\Core\Grid\Column\ColumnCollection; $dataColumn = new DataColumn(&#39;id_product&#39;); $dataColumn-&amp;gt;setName(&#39;ID&#39;); $dataColumn-&amp;gt;setOptions([ &#39;field&#39; =&amp;gt; &#39;id_product&#39;, ]); $columns = new ColumnCollection(); $columns-&amp;gt;add($dataColumn);  </description>
    </item>
    
    <item>
      <title>SeverityLevelColumn reference</title>
      <link>https://devdocs.prestashop.com/1.7/development/components/grid/columns-reference/severity-level/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/components/grid/columns-reference/severity-level/</guid>
      <description> SeverityLevelColumn Type Use this column to display severity level in your Grid.
Available options field type: string required
Record field name which is used as severity level.
with_message type: bool default: false
Whether to show severity level message in addition with numeric severity level value.
Example usage use PrestaShop\PrestaShop\Core\Grid\Column\Type\Status\SeverityLevelColumn; use PrestaShop\PrestaShop\Core\Grid\Column\ColumnCollection; $column = new SeverityLevelColumn(&#39;severity&#39;); $column-&amp;gt;setName(&#39;Severity (1-4)&#39;); $column-&amp;gt;setOptions([ &#39;field&#39; =&amp;gt; &#39;severity&#39;, &#39;with_message&#39; =&amp;gt; true, // enable severity messages ]); $columns = new ColumnCollection(); $columns-&amp;gt;add($column);  </description>
    </item>
    
    <item>
      <title>DateTimeColumn reference</title>
      <link>https://devdocs.prestashop.com/1.7/development/components/grid/columns-reference/datetime/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/components/grid/columns-reference/datetime/</guid>
      <description> DateTimeColumn Type You can use this column type in your Grid to format datetime values. It is common to get datetime value (e.g. Created at, Updated at &amp;amp; etc.) from database and format them before displaying.
Available options field type: string required
Field name which has datetime value.
format type: string default: Y-m-d H:i:s
Format to use when formatting datetime.
Example usage use PrestaShop\PrestaShop\Core\Grid\Column\Type\Common\DateTimeColumn; use PrestaShop\PrestaShop\Core\Grid\Column\ColumnCollection; $column = new DateTimeColumn(&#39;datetime&#39;); $column-&amp;gt;setName(&#39;Created at&#39;); $column-&amp;gt;setOptions([ &#39;field&#39; =&amp;gt; &#39;date_add&#39;, // field name that has datetime value &#39;format&#39; =&amp;gt; &#39;Y/d/m H:i:s&#39;, // define custom format for datetime ]); $columns = new ColumnCollection(); $columns-&amp;gt;add($column);  </description>
    </item>
    
    <item>
      <title>EmployeeNameWithAvatarColumn reference</title>
      <link>https://devdocs.prestashop.com/1.7/development/components/grid/columns-reference/employee-name-with-avatar/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/components/grid/columns-reference/employee-name-with-avatar/</guid>
      <description> EmployeeNameWithAvatarColumn Type It is special type of column that allows you to add employee name with avatar column to your Grid. You can see how it looks be default:
  Employee name with avatar column   Available options field type: string required
Employee&amp;rsquo;s name field.
Example usage use PrestaShop\PrestaShop\Core\Grid\Column\Type\Employee\EmployeeNameWithAvatarColumn; use PrestaShop\PrestaShop\Core\Grid\Column\ColumnCollection; $column = new EmployeeNameWithAvatarColumn(&#39;severity&#39;); $column-&amp;gt;setName(&#39;Severity (1-4)&#39;); $column-&amp;gt;setOptions([ &#39;field&#39; =&amp;gt; &#39;severity&#39;, &#39;with_message&#39; =&amp;gt; true, // enable severity messages ]); $columns = new ColumnCollection(); $columns-&amp;gt;add($column);  </description>
    </item>
    
  </channel>
</rss>